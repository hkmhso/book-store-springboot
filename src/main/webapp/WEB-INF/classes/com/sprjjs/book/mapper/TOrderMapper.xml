<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sprjjs.book.mapper.TOrderMapper" >
  <resultMap id="BaseResultMap" type="com.sprjjs.book.pojo.TOrder" >
    <id column="rid" property="rid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="CHAR" />
    <result column="oid" property="oid" jdbcType="CHAR" />
    <result column="sta" property="sta" jdbcType="VARCHAR" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="DOUBLE" />
    <result column="placed" property="placed" jdbcType="TIMESTAMP" />
    <result column="receipt" property="receipt" jdbcType="TIMESTAMP" />
    <result column="deliver" property="deliver" jdbcType="TIMESTAMP" />
    <result column="handover" property="handover" jdbcType="TIMESTAMP" />
    <result column="bankid" property="bankid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rid, uid, oid, sta, aid, payment, placed, receipt, deliver, handover, bankid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sprjjs.book.pojo.TOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where rid = #{rid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where rid = #{rid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sprjjs.book.pojo.TOrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sprjjs.book.pojo.TOrder" >
    insert into t_order (rid, uid, oid, sta, 
      aid, payment, placed, 
      receipt, deliver, handover, 
      bankid)
    values (#{rid,jdbcType=INTEGER}, #{uid,jdbcType=CHAR}, #{oid,jdbcType=CHAR}, #{sta,jdbcType=VARCHAR}, 
      #{aid,jdbcType=INTEGER}, #{payment,jdbcType=DOUBLE}, #{placed,jdbcType=TIMESTAMP}, 
      #{receipt,jdbcType=TIMESTAMP}, #{deliver,jdbcType=TIMESTAMP}, #{handover,jdbcType=TIMESTAMP}, 
      #{bankid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sprjjs.book.pojo.TOrder" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        rid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="oid != null" >
        oid,
      </if>
      <if test="sta != null" >
        sta,
      </if>
      <if test="aid != null" >
        aid,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="placed != null" >
        placed,
      </if>
      <if test="receipt != null" >
        receipt,
      </if>
      <if test="deliver != null" >
        deliver,
      </if>
      <if test="handover != null" >
        handover,
      </if>
      <if test="bankid != null" >
        bankid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=CHAR},
      </if>
      <if test="oid != null" >
        #{oid,jdbcType=CHAR},
      </if>
      <if test="sta != null" >
        #{sta,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DOUBLE},
      </if>
      <if test="placed != null" >
        #{placed,jdbcType=TIMESTAMP},
      </if>
      <if test="receipt != null" >
        #{receipt,jdbcType=TIMESTAMP},
      </if>
      <if test="deliver != null" >
        #{deliver,jdbcType=TIMESTAMP},
      </if>
      <if test="handover != null" >
        #{handover,jdbcType=TIMESTAMP},
      </if>
      <if test="bankid != null" >
        #{bankid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sprjjs.book.pojo.TOrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=CHAR},
      </if>
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=CHAR},
      </if>
      <if test="record.sta != null" >
        sta = #{record.sta,jdbcType=VARCHAR},
      </if>
      <if test="record.aid != null" >
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=DOUBLE},
      </if>
      <if test="record.placed != null" >
        placed = #{record.placed,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receipt != null" >
        receipt = #{record.receipt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliver != null" >
        deliver = #{record.deliver,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handover != null" >
        handover = #{record.handover,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bankid != null" >
        bankid = #{record.bankid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set rid = #{record.rid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=CHAR},
      oid = #{record.oid,jdbcType=CHAR},
      sta = #{record.sta,jdbcType=VARCHAR},
      aid = #{record.aid,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=DOUBLE},
      placed = #{record.placed,jdbcType=TIMESTAMP},
      receipt = #{record.receipt,jdbcType=TIMESTAMP},
      deliver = #{record.deliver,jdbcType=TIMESTAMP},
      handover = #{record.handover,jdbcType=TIMESTAMP},
      bankid = #{record.bankid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sprjjs.book.pojo.TOrder" >
    update t_order
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=CHAR},
      </if>
      <if test="oid != null" >
        oid = #{oid,jdbcType=CHAR},
      </if>
      <if test="sta != null" >
        sta = #{sta,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DOUBLE},
      </if>
      <if test="placed != null" >
        placed = #{placed,jdbcType=TIMESTAMP},
      </if>
      <if test="receipt != null" >
        receipt = #{receipt,jdbcType=TIMESTAMP},
      </if>
      <if test="deliver != null" >
        deliver = #{deliver,jdbcType=TIMESTAMP},
      </if>
      <if test="handover != null" >
        handover = #{handover,jdbcType=TIMESTAMP},
      </if>
      <if test="bankid != null" >
        bankid = #{bankid,jdbcType=VARCHAR},
      </if>
    </set>
    where rid = #{rid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sprjjs.book.pojo.TOrder" >
    update t_order
    set uid = #{uid,jdbcType=CHAR},
      oid = #{oid,jdbcType=CHAR},
      sta = #{sta,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DOUBLE},
      placed = #{placed,jdbcType=TIMESTAMP},
      receipt = #{receipt,jdbcType=TIMESTAMP},
      deliver = #{deliver,jdbcType=TIMESTAMP},
      handover = #{handover,jdbcType=TIMESTAMP},
      bankid = #{bankid,jdbcType=VARCHAR}
    where rid = #{rid,jdbcType=INTEGER}
  </update>
</mapper>